--------- beginning of main
--------- beginning of system
<org.apache.cordova.CordovaActivity: void <init>()> -> <android.app.Activity: void <init>()>
<org.apache.cordova.CordovaActivity: void <init>()> -> <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<org.apache.cordova.DroidGap: void <init>()> -> <org.apache.cordova.CordovaActivity: void <init>()>
<com.prashanth.paranormalstories.MainActivity: void <init>()> -> <org.apache.cordova.DroidGap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void init(android.app.Activity)> -> <org.apache.cordova.Config: void <init>(android.app.Activity)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.Config: void init(android.app.Activity)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: boolean requestFeature(int)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: void setFlags(int,int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getWidth()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getHeight()>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void <init>(android.content.Context,int,int)> -> <android.widget.LinearLayout: void <init>(android.content.Context)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.LinearLayoutSoftKeyboardDetect: void <init>(android.content.Context,int,int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout: void setOrientation(int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setBackgroundColor(int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setVolumeControlStream(int)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)>
<com.google.ads.internal.a: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <com.google.ads.internal.a: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <com.google.ads.internal.a$2: void <init>()>
<com.google.ads.v: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.w: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.x: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.y: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <com.google.ads.internal.a$3: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.google.ads.y: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.aa: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <com.google.ads.internal.a$4: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.google.ads.z: void <init>()> -> <com.google.ads.AdActivity$StaticMethodWrapper: void <init>()>
<com.google.ads.z: void <init>(com.google.ads.AdActivity$StaticMethodWrapper)> -> <java.lang.Object: void <init>()>
<com.google.ads.z: void <init>()> -> <com.google.ads.z: void <init>(com.google.ads.AdActivity$StaticMethodWrapper)>
<com.google.ads.q: void <clinit>()> -> <com.google.ads.internal.a$2: java.lang.Object b()>
<com.google.ads.q: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.s: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.t: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.p: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.y: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.r: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.u: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.ab: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.ac: void <clinit>()> -> <com.google.ads.internal.a$2: java.lang.Object b()>
<com.google.ads.ac: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <com.google.ads.internal.a$1: void <init>()>
<com.google.ads.internal.a: void <clinit>()> -> <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.google.ads.AdView: void <clinit>()> -> <com.google.ads.internal.a$2: java.lang.Object b()>
<com.google.ads.AdSize: void <init>(int,int,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.AdSize: void <clinit>()> -> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: void <init>(int,int,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.AdSize: void <clinit>()> -> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: void <init>(int,int,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.AdSize: void <clinit>()> -> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: void <init>(int,int,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.AdSize: void <clinit>()> -> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: void <init>(int,int,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.AdSize: void <clinit>()> -> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: void <init>(int,int,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.AdSize: void <clinit>()> -> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.RelativeLayout: void <init>(android.content.Context)>
<com.google.ads.util.AdUtil: int a(java.lang.String)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<com.google.ads.util.AdUtil: void <clinit>()> -> <com.google.ads.util.AdUtil: int a(java.lang.String)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean a(int,int,java.lang.String)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean a(int,int,java.lang.String)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> -> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> -> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.FrameLayout: void <init>(android.content.Context)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.View: void setFocusable(boolean)>
<com.google.ads.internal.d: void <clinit>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void <init>()> -> <com.google.ads.internal.g: void a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.g: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.h: void <clinit>()> -> <com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: boolean a()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: boolean a()>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.m: void <init>()> -> <com.google.ads.util.i: void <init>()>
<com.google.ads.m: void <init>()> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.m: void <init>()> -> <com.google.ads.m$a: void <init>()>
<com.google.ads.m: void <init>()> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.m: void <init>()> -> <android.os.Looper: android.os.Looper getMainLooper()>
<com.google.ads.m: void <init>()> -> <android.os.Handler: void <init>(android.os.Looper)>
<com.google.ads.m: void <init>()> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.m: void <clinit>()> -> <com.google.ads.m: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i: void <init>()>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$d: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)>
<com.google.ads.af: void <init>(com.google.ads.internal.d)> -> <java.lang.Object: void <init>()>
<com.google.ads.af: void <init>(com.google.ads.internal.d)> -> <java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.af: void <init>(com.google.ads.internal.d)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.internal.h: com.google.ads.AdSize c()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setBackgroundColor(int)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.view.View: android.content.Context getContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <android.webkit.WebSettings: java.lang.String getUserAgentString()>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.AdUtil: void a(android.webkit.WebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.internal.AdWebView$1: void <init>(com.google.ads.internal.AdWebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.lang.Long: long longValue()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setSupportZoom(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setScrollBarStyle(int)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.IcsUtil$a: void <init>(com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.IcsUtil$IcsAdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)>
<com.google.ads.internal.d: void a()> -> <android.view.View: void setVisibility(int)>
<com.google.ads.n: boolean b()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.internal.h: boolean a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.n: boolean b()>
<com.google.ads.internal.i: void <clinit>()> -> <com.google.ads.internal.a$2: java.lang.Object b()>
<com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.d: void a()> -> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.d: void a()> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <java.lang.Integer: int intValue()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.d: void a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.AdUtil: void h(android.content.Context)> -> <android.content.IntentFilter: void <init>()>
<com.google.ads.util.AdUtil: void h(android.content.Context)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.google.ads.util.AdUtil: void h(android.content.Context)> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<com.google.ads.util.AdUtil: void h(android.content.Context)> -> <com.google.ads.util.AdUtil$UserActivityReceiver: void <init>()>
<com.google.ads.util.AdUtil: void h(android.content.Context)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.util.AdUtil: void h(android.content.Context)>
<com.google.ads.d: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.d: void <init>()>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> -> <java.lang.Object: void <init>()>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> -> <java.lang.Object: void <init>()>
<com.google.ads.util.a: void <clinit>()> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.a: void c(boolean,java.lang.String)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.a: void b(java.lang.Object)> -> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> -> <com.google.ads.util.a: void b(java.lang.Object)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.e: void <init>(com.google.ads.internal.d)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.RelativeLayout: void setGravity(int)>
<com.google.ads.util.c: void <clinit>()> -> <java.lang.Class: boolean desiredAssertionStatus()>
<com.google.ads.util.c: byte[] a(java.lang.String)> -> <java.lang.String: byte[] getBytes()>
<com.google.ads.util.c: byte[] a(byte[],int,int,int)> -> <com.google.ads.util.c$b: void <init>(int,byte[])>
<com.google.ads.util.c: byte[] a(byte[],int,int,int)> -> <com.google.ads.util.c$b: boolean a(byte[],int,int,boolean)>
<com.google.ads.util.c: byte[] a(byte[],int,int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.util.c: byte[] a(byte[],int)> -> <com.google.ads.util.c: byte[] a(byte[],int,int,int)>
<com.google.ads.util.c: byte[] a(java.lang.String)> -> <com.google.ads.util.c: byte[] a(byte[],int)>
<com.google.ads.internal.k: void <clinit>()> -> <com.google.ads.util.c: byte[] a(java.lang.String)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureStore: void <init>()>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <java.io.ByteArrayInputStream: void <init>(byte[])>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureStore: void load(java.io.InputStream)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void <init>(android.content.Context)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void setGestureStrokeType(int)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void setGestureVisible(boolean)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <com.google.ads.internal.k$a: void <init>(android.app.Activity,com.google.ads.internal.d,android.gesture.GestureStore)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.ViewGroup: void addView(android.view.View,int,int)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.ViewGroup: void addView(android.view.View,int,int)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <android.view.ViewGroup: void addView(android.view.View)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout: void setHorizontalGravity(int)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.Config: java.lang.String getStartUrl()>
<org.apache.cordova.CordovaWebView: void <clinit>()> -> <android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <java.lang.Class: boolean isInstance(java.lang.Object)>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
[ Intent received ]
caller=<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
callsite=$r5 = virtualinvoke $r4.<android.app.Activity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaWebView: void loadConfiguration()> -> <org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadConfiguration()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <org.apache.cordova.CordovaWebView: void loadConfiguration()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebView: void setInitialScale(int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.view.View: void setVerticalScrollBarEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.view.View: boolean requestFocusFromTouch()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setSaveFormData(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView$Level16Apis: void enableUniversalAccess(android.webkit.WebSettings)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.io.File: java.lang.String getPath()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.io.File: java.lang.String getPath()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void updateUserAgentString()> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<org.apache.cordova.CordovaWebView: void updateUserAgentString()> -> <android.webkit.WebSettings: java.lang.String getUserAgentString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView: void updateUserAgentString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.IntentFilter: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView$1: void <init>(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.LinkedList: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue,org.apache.cordova.NativeToJsMessageQueue$1)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$PrivateApiBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue,org.apache.cordova.NativeToJsMessageQueue$1)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.util.AbstractCollection: boolean isEmpty()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)>
<org.apache.cordova.ExposedJsApi: void <init>(org.apache.cordova.api.PluginManager,org.apache.cordova.NativeToJsMessageQueue)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.ExposedJsApi: void <init>(org.apache.cordova.api.PluginManager,org.apache.cordova.NativeToJsMessageQueue)>
<org.apache.cordova.CordovaWebView: void exposeJsInterface()> -> <android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView: void exposeJsInterface()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <org.apache.cordova.CordovaWebView: void setup()>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaWebView: void <init>(android.content.Context)>
<org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <android.webkit.WebViewClient: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <java.util.Hashtable: void <init>()>
<org.apache.cordova.IceCreamCordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.IceCreamCordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaChromeClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <android.webkit.WebChromeClient: void <init>()>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaChromeClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.View: void setId(int)>
<org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebViewClient: void setWebView(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaChromeClient: void setWebView(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.ViewGroup: void addView(android.view.View)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.app.Activity: void setContentView(android.view.View)>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: void init()>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <android.view.View: void setBackgroundColor(int)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void loadSpinner()> -> <android.webkit.WebView: boolean canGoBack()>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadSpinner()> -> <org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: void loadSpinner()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
[ Intent received ]
caller=<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
callsite=$r5 = virtualinvoke $r4.<android.app.Activity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void init()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void init()> -> <org.apache.cordova.api.PluginManager: void loadPlugins()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void startupPlugins()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void init()> -> <org.apache.cordova.api.PluginManager: void startupPlugins()>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.api.PluginManager: void init()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
[ Intent received ]
caller=<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
callsite=$r5 = virtualinvoke $r4.<android.app.Activity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.Integer: int parseInt(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.CordovaWebView$2: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebView,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.CordovaWebView$3: void <init>(org.apache.cordova.CordovaWebView,int,org.apache.cordova.CordovaWebView,int,java.lang.Runnable)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.CordovaWebView$4: void <init>(org.apache.cordova.CordovaWebView,java.lang.Runnable,org.apache.cordova.CordovaWebView,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)>
<com.google.ads.AdRequest: void <clinit>()> -> <java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.AdRequest: void <clinit>()> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: byte[] getBytes()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.security.MessageDigest: void update(byte[],int,int)>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.security.MessageDigest: byte[] digest()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.math.BigInteger: void <init>(int,byte[])>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<com.google.ads.AdRequest: void <clinit>()> -> <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
<com.google.ads.AdRequest: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.AdRequest: void <init>()> -> <java.util.HashMap: void <init>()>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdRequest: void <init>()>
<com.google.ads.AdView: boolean isRefreshing()> -> <com.google.ads.internal.d: boolean t()>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> -> <com.google.ads.AdView: boolean isRefreshing()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.internal.d: boolean q()>
<com.google.ads.AdActivity: void <clinit>()> -> <com.google.ads.internal.a$2: java.lang.Object b()>
<com.google.ads.AdActivity: void <clinit>()> -> <java.lang.Object: void <init>()>
<com.google.ads.AdActivity: void <clinit>()> -> <com.google.ads.AdActivity$StaticMethodWrapper: void <init>()>
<com.google.ads.AdActivity: boolean isShowing()> -> <com.google.ads.AdActivity$StaticMethodWrapper: boolean isShowing()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.AdActivity: boolean isShowing()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <android.content.SharedPreferences: long getLong(java.lang.String,long)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.at: void <clinit>()> -> <com.google.ads.internal.a$2: java.lang.Object b()>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)> -> <android.content.SharedPreferences: boolean contains(java.lang.String)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <com.google.ads.at$1: void <init>(android.content.Context)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.at: boolean a(android.content.Context,long)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.at: void a(android.app.Activity)> -> <com.google.ads.at$a: void <init>(android.app.Activity)>
<com.google.ads.at: void a(android.app.Activity)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.at: void a(android.app.Activity)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.at: void a(android.app.Activity)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.d: boolean a()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i: void <init>()>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.as: void <clinit>()> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setBackgroundColor(int)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.view.View: android.content.Context getContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.AdUtil: void a(android.webkit.WebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.internal.AdWebView$1: void <init>(com.google.ads.internal.AdWebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.lang.Long: long longValue()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setSupportZoom(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setScrollBarStyle(int)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.IcsUtil$a: void <init>(com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.view.View: void setWillNotDraw(boolean)>
<com.google.ads.internal.f: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f$1: void <init>()>
<com.google.ads.internal.f: void <init>(com.google.ads.l,com.google.ads.internal.f$a)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.f: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f: void <init>(com.google.ads.l,com.google.ads.internal.f$a)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f: void <init>(com.google.ads.l)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.internal.c: void <init>(com.google.ads.l)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.l: void <init>(com.google.ads.n)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest)>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> -> <com.google.ads.internal.d: void a(com.google.ads.AdRequest)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.d: long p()>
<com.google.ads.internal.c: void run()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.util.HashMap: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)>
<com.google.ads.util.d: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.util.d: void <clinit>()> -> <com.google.ads.util.d: void <init>()>
<com.google.ads.util.d: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.util.d: void <clinit>()> -> <com.google.ads.util.d: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.google.ads.util.d: void <init>(java.lang.String,java.lang.String,java.lang.String)> -> <java.lang.Object: void <init>()>
<com.google.ads.util.d: void <clinit>()> -> <com.google.ads.util.d: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> -> <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> -> <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: byte[] getBytes()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.security.MessageDigest: void update(byte[],int,int)>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.security.MessageDigest: byte[] digest()>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.math.BigInteger: void <init>(int,byte[])>
<com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)> -> <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> -> <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> -> <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)>
<com.google.ads.internal.c: void run()> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.d: com.google.ads.internal.g n()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long m()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long n()>
<com.google.ads.internal.g: java.lang.String l()> -> <java.util.AbstractCollection: boolean isEmpty()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String l()>
<com.google.ads.internal.g: java.lang.String k()> -> <java.util.AbstractCollection: boolean isEmpty()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String k()>
<com.google.ads.internal.g: long j()> -> <java.util.LinkedList: int size()>
<com.google.ads.internal.g: long j()> -> <java.util.LinkedList: int size()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long j()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long o()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long p()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long s()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long v()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: boolean y()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: boolean A()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String D()>
<com.google.ads.internal.g: long E()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long E()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: void a()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.g: void i()> -> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void i()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: void i()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.internal.h: boolean a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.n: boolean b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.h: com.google.ads.AdSize c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isFullWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isAutoHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isCustomAdSize()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdSize: java.lang.String toString()> -> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)> -> <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)> -> <android.net.NetworkInfo: int getType()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <android.content.ContextWrapper: java.io.File getCacheDir()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.ads.ak: void f(android.content.Context)> -> <dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String c()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String i()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String g()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String k()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String e()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String d()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String j()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String h()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String l()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ao: java.lang.String f()>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <java.lang.String: char[] toCharArray()>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <com.google.ads.aq: int a(char[],int,byte[],int,byte[])>
<com.google.ads.aq: byte[] a(char[],int,int,byte[])> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.aq: byte[] a(char[],int,int)> -> <com.google.ads.aq: byte[] a(char[],int,int,byte[])>
<com.google.ads.aq: byte[] a(java.lang.String)> -> <com.google.ads.aq: byte[] a(char[],int,int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <com.google.ads.aq: byte[] a(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.Buffer: java.nio.Buffer flip()>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
<com.google.ads.an: byte[] a(byte[],java.lang.String)> -> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <com.google.ads.an: byte[] a(byte[],java.lang.String)>
<com.google.ads.ak: java.lang.String b(byte[],java.lang.String)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <com.google.ads.ak: java.lang.String b(byte[],java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.google.ads.ak: void f(android.content.Context)> -> <java.io.File: java.lang.String getName()>
<com.google.ads.ak: void f(android.content.Context)> -> <java.io.File: boolean delete()>
<com.google.ads.ak: void f(android.content.Context)> -> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.ads.ak: void f(android.content.Context)> -> <java.io.File: boolean delete()>
<com.google.ads.ak: void b(java.lang.String,android.content.Context)> -> <com.google.ads.ak: void f(android.content.Context)>
+through reflection
<com.google.ads.ak: java.lang.Long b()> -> <com.google.android.ads.zxxz.a: java.lang.Long a()>
<com.google.ads.ak: void b(java.lang.String,android.content.Context)> -> <com.google.ads.ak: java.lang.Long b()>
<com.google.ads.ak: void b(java.lang.String,android.content.Context)> -> <java.lang.Long: long longValue()>
<com.google.ads.ak: com.google.ads.ak a(java.lang.String,android.content.Context)> -> <com.google.ads.ak: void b(java.lang.String,android.content.Context)>
<com.google.ads.ak: void <init>(android.content.Context)> -> <com.google.ads.aj: void <init>(android.content.Context)>
<com.google.ads.ak: com.google.ads.ak a(java.lang.String,android.content.Context)> -> <com.google.ads.ak: void <init>(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.ak: com.google.ads.ak a(java.lang.String,android.content.Context)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.al: void <init>(com.google.ads.ai)> -> <java.lang.Object: void <init>()>
<com.google.ads.ah: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.al: void <init>(com.google.ads.ai)> -> <com.google.ads.ah: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.al: void <init>(com.google.ads.ai)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.au: void <init>(java.io.OutputStream,byte[])> -> <java.lang.Object: void <init>()>
<com.google.ads.au: com.google.ads.au a(java.io.OutputStream,int)> -> <com.google.ads.au: void <init>(java.io.OutputStream,byte[])>
<com.google.ads.au: com.google.ads.au a(java.io.OutputStream)> -> <com.google.ads.au: com.google.ads.au a(java.io.OutputStream,int)>
+through reflection
<com.google.ads.ak: java.lang.String c()> -> <com.google.android.ads.zxxz.d: java.lang.String a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String c()>
<com.google.ads.av: void <clinit>()> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.av: void <clinit>()> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String a()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
+through reflection
<com.google.ads.ak: java.lang.Long b()> -> <com.google.android.ads.zxxz.a: java.lang.Long a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.Long b()>
<com.google.ads.ak: void b(android.content.Context)> -> <java.lang.Long: long longValue()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,long)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(long)> -> <com.google.ads.au: void b(long)>
<com.google.ads.au: void a(int,long)> -> <com.google.ads.au: void a(long)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,long)>
+through reflection
<com.google.ads.ak: java.lang.String d(android.content.Context)> -> <com.google.android.ads.zxxz.b: java.lang.String a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String d(android.content.Context)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
<com.google.ads.au: void b()> -> <com.squareup.okhttp.internal.http.RetryableOutputStream: void write(byte[],int,int)>
<com.google.ads.au: void a()> -> <com.google.ads.au: void b()>
<com.google.ads.ag: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$b: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$c: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$f: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$g: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$h: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$i: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$j: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$k: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$l: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$m: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$d: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$e: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void a(byte[],byte[])> -> <com.google.ads.ag$b: void a(byte[],byte[])>
<com.google.ads.ag: void a(byte[],byte[])> -> <com.google.ads.ag$b: void a(byte[],byte[])>
<com.google.ads.aq: char[] a(byte[],int,int,char[],int)> -> <com.google.ads.aq: char[] a(byte[],int,int,char[],int,char[])>
<com.google.ads.aq: java.lang.String a(byte[],int,int,char[],boolean)> -> <com.google.ads.aq: char[] a(byte[],int,int,char[],int)>
<com.google.ads.aq: java.lang.String a(byte[],int,int,char[],boolean)> -> <java.lang.String: void <init>(char[],int,int)>
<com.google.ads.aq: java.lang.String a(byte[],boolean)> -> <com.google.ads.aq: java.lang.String a(byte[],int,int,char[],boolean)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.aj: java.lang.String a(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: android.view.ViewParent getParent()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: void getLocationOnScreen(int[])>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: boolean isShown()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: int getWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: int getHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.util.HashMap: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: int getWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: int getHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.telephony.TelephonyManager: int getPhoneType()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.telephony.TelephonyManager: int getNetworkType()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.b: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.b: java.math.BigInteger d()> -> <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<com.google.ads.b: java.math.BigInteger d()> -> <java.util.UUID: java.util.UUID randomUUID()>
<com.google.ads.b: java.math.BigInteger d()> -> <java.util.UUID: long getLeastSignificantBits()>
<com.google.ads.b: byte[] a(long)> -> <java.math.BigInteger: java.math.BigInteger valueOf(long)>
<com.google.ads.b: byte[] a(long)> -> <java.math.BigInteger: byte[] toByteArray()>
<com.google.ads.b: java.math.BigInteger d()> -> <com.google.ads.b: byte[] a(long)>
<com.google.ads.b: java.math.BigInteger d()> -> <java.security.MessageDigest: void update(byte[])>
<com.google.ads.b: java.math.BigInteger d()> -> <java.util.UUID: long getMostSignificantBits()>
<com.google.ads.b: byte[] a(long)> -> <java.math.BigInteger: java.math.BigInteger valueOf(long)>
<com.google.ads.b: byte[] a(long)> -> <java.math.BigInteger: byte[] toByteArray()>
<com.google.ads.b: java.math.BigInteger d()> -> <com.google.ads.b: byte[] a(long)>
<com.google.ads.b: java.math.BigInteger d()> -> <java.security.MessageDigest: void update(byte[])>
<com.google.ads.b: java.math.BigInteger d()> -> <java.security.MessageDigest: byte[] digest()>
<com.google.ads.b: java.math.BigInteger d()> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.b: java.math.BigInteger d()> -> <java.math.BigInteger: void <init>(byte[])>
<com.google.ads.b: void <init>()> -> <com.google.ads.b: java.math.BigInteger d()>
<com.google.ads.b: com.google.ads.b a()> -> <com.google.ads.b: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: com.google.ads.b a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: java.math.BigInteger b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.math.BigInteger: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: com.google.ads.b a()>
<com.google.ads.b: java.math.BigInteger c()> -> <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: java.math.BigInteger c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.math.BigInteger: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: void <init>()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.AdWebView: void a(boolean)> -> <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.ads.internal.AdWebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebViewClient$1: void <init>(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void start()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.support.v4.app.BackStackRecord: java.lang.String toString()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: void spinnerStop()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <android.net.Uri: boolean isHierarchical()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: void <init>()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String getEncodedQuery()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.x: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.aa: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <android.net.Uri: boolean isHierarchical()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: void <init>()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String getEncodedQuery()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <android.net.Uri: java.lang.String getPath()>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.internal.d: com.google.ads.internal.c k()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.Object: void notify()>
<com.google.ads.internal.c: void run()> -> <java.lang.Object: void wait(long)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.internal.c$a: void <init>(com.google.ads.internal.d,android.webkit.WebView,com.google.ads.internal.f,com.google.ads.AdRequest$ErrorCode,boolean)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <android.os.Handler: boolean post(java.lang.Runnable)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.aa: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <android.net.Uri: boolean isHierarchical()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: void <init>()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String getEncodedQuery()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <android.net.Uri: java.lang.String getPath()>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.y: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.aa: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <android.net.Uri: boolean isHierarchical()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: void <init>()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String getEncodedQuery()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <android.net.Uri: java.lang.String getPath()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.api.PluginManager: void onResume(boolean)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <android.webkit.WebView: void resumeTimers()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean backHistory()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: void finish()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <android.app.Activity: void onDestroy()>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.ArrayList: java.util.Iterator iterator()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.api.PluginManager: void onDestroy()>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <org.apache.cordova.CordovaWebView: void handleDestroy()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void endActivity()> -> <android.app.Activity: void finish()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: void endActivity()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void <init>()> -> <android.app.Activity: void <init>()>
<org.apache.cordova.CordovaActivity: void <init>()> -> <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<org.apache.cordova.DroidGap: void <init>()> -> <org.apache.cordova.CordovaActivity: void <init>()>
<com.prashanth.paranormalstories.MainActivity: void <init>()> -> <org.apache.cordova.DroidGap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: boolean requestFeature(int)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: void setFlags(int,int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getWidth()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getHeight()>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void <init>(android.content.Context,int,int)> -> <android.widget.LinearLayout: void <init>(android.content.Context)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.LinearLayoutSoftKeyboardDetect: void <init>(android.content.Context,int,int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout: void setOrientation(int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setBackgroundColor(int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setVolumeControlStream(int)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.RelativeLayout: void <init>(android.content.Context)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> -> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> -> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.FrameLayout: void <init>(android.content.Context)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.View: void setFocusable(boolean)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void <init>()> -> <com.google.ads.internal.g: void a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.g: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: boolean a()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: boolean a()>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i: void <init>()>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$d: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.n: void <init>(com.google.ads.m,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h,com.google.ads.internal.d)>
<com.google.ads.af: void <init>(com.google.ads.internal.d)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setBackgroundColor(int)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.view.View: android.content.Context getContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.AdUtil: void a(android.webkit.WebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.internal.AdWebView$1: void <init>(com.google.ads.internal.AdWebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.lang.Long: long longValue()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setSupportZoom(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setScrollBarStyle(int)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.IcsUtil$a: void <init>(com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.IcsUtil$IcsAdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)>
<com.google.ads.internal.d: void a()> -> <android.view.View: void setVisibility(int)>
<com.google.ads.n: boolean b()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.internal.h: boolean a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.n: boolean b()>
<com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.d: void a()> -> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.d: void a()> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void a()> -> <java.lang.Integer: int intValue()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.d: void a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.util.AdUtil: void h(android.content.Context)>
<com.google.ads.d: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.d: void <init>()>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> -> <java.lang.Object: void <init>()>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> -> <java.lang.Object: void <init>()>
<com.google.ads.util.a: void c(boolean,java.lang.String)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.a: void b(java.lang.Object)> -> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> -> <com.google.ads.util.a: void b(java.lang.Object)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.e: void <init>(com.google.ads.internal.d)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.RelativeLayout: void setGravity(int)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureStore: void <init>()>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <java.io.ByteArrayInputStream: void <init>(byte[])>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureStore: void load(java.io.InputStream)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void <init>(android.content.Context)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void setGestureStrokeType(int)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void setGestureVisible(boolean)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <com.google.ads.internal.k$a: void <init>(android.app.Activity,com.google.ads.internal.d,android.gesture.GestureStore)>
<com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> -> <android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.internal.k: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.ViewGroup: void addView(android.view.View,int,int)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.ViewGroup: void addView(android.view.View,int,int)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <android.view.ViewGroup: void addView(android.view.View)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout: void setHorizontalGravity(int)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.Config: java.lang.String getStartUrl()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <java.lang.Class: boolean isInstance(java.lang.Object)>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
[ Intent received ]
caller=<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
callsite=$r5 = virtualinvoke $r4.<android.app.Activity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaWebView: void loadConfiguration()> -> <org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadConfiguration()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <org.apache.cordova.CordovaWebView: void loadConfiguration()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebView: void setInitialScale(int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.view.View: void setVerticalScrollBarEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.view.View: boolean requestFocusFromTouch()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setSaveFormData(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView$Level16Apis: void enableUniversalAccess(android.webkit.WebSettings)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.io.File: java.lang.String getPath()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.io.File: java.lang.String getPath()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void updateUserAgentString()> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<org.apache.cordova.CordovaWebView: void updateUserAgentString()> -> <android.webkit.WebSettings: java.lang.String getUserAgentString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView: void updateUserAgentString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.IntentFilter: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView$1: void <init>(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.LinkedList: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue,org.apache.cordova.NativeToJsMessageQueue$1)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$PrivateApiBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue,org.apache.cordova.NativeToJsMessageQueue$1)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.util.AbstractCollection: boolean isEmpty()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)>
<org.apache.cordova.ExposedJsApi: void <init>(org.apache.cordova.api.PluginManager,org.apache.cordova.NativeToJsMessageQueue)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.ExposedJsApi: void <init>(org.apache.cordova.api.PluginManager,org.apache.cordova.NativeToJsMessageQueue)>
<org.apache.cordova.CordovaWebView: void exposeJsInterface()> -> <android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView: void exposeJsInterface()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <org.apache.cordova.CordovaWebView: void setup()>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaWebView: void <init>(android.content.Context)>
<org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <android.webkit.WebViewClient: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <java.util.Hashtable: void <init>()>
<org.apache.cordova.IceCreamCordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.IceCreamCordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaChromeClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <android.webkit.WebChromeClient: void <init>()>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaChromeClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.View: void setId(int)>
<org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebViewClient: void setWebView(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaChromeClient: void setWebView(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.ViewGroup: void addView(android.view.View)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.app.Activity: void setContentView(android.view.View)>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: void init()>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <android.view.View: void setBackgroundColor(int)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void loadSpinner()> -> <android.webkit.WebView: boolean canGoBack()>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadSpinner()> -> <org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: void loadSpinner()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
[ Intent received ]
caller=<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
callsite=$r5 = virtualinvoke $r4.<android.app.Activity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void init()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginEntry: void <init>(java.lang.String,java.lang.String,boolean)>
<org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.api.PluginManager: void addService(org.apache.cordova.api.PluginEntry)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)>
<com.google.ads.AdRequest: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.AdRequest: void <init>()> -> <java.util.HashMap: void <init>()>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdRequest: void <init>()>
<com.google.ads.AdView: boolean isRefreshing()> -> <com.google.ads.internal.d: boolean t()>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> -> <com.google.ads.AdView: boolean isRefreshing()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.internal.d: boolean q()>
<com.google.ads.AdActivity: boolean isShowing()> -> <com.google.ads.AdActivity$StaticMethodWrapper: boolean isShowing()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.AdActivity: boolean isShowing()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <android.content.SharedPreferences: long getLong(java.lang.String,long)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)> -> <android.content.SharedPreferences: boolean contains(java.lang.String)>
<com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)> -> <android.content.SharedPreferences: boolean contains(java.lang.String)>
<com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)> -> <android.content.SharedPreferences: long getLong(java.lang.String,long)>
<com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)> -> <java.util.Date: void <init>()>
<com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)> -> <java.util.Date: long getTime()>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <com.google.ads.at: boolean a(android.content.Context,long,android.content.SharedPreferences)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <com.google.ads.at$1: void <init>(android.content.Context)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.at: boolean a(android.content.Context,long)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.at: boolean a(android.content.Context,long)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.at: void a(android.app.Activity)> -> <com.google.ads.at$a: void <init>(android.app.Activity)>
<com.google.ads.at: void a(android.app.Activity)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.at: void a(android.app.Activity)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.at: void a(android.app.Activity)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.d: boolean a()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i: void <init>()>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setBackgroundColor(int)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.view.View: android.content.Context getContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.AdUtil: void a(android.webkit.WebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.internal.AdWebView$1: void <init>(com.google.ads.internal.AdWebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.lang.Long: long longValue()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setSupportZoom(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setScrollBarStyle(int)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.IcsUtil$a: void <init>(com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.view.View: void setWillNotDraw(boolean)>
<com.google.ads.internal.f: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f$1: void <init>()>
<com.google.ads.internal.f: void <init>(com.google.ads.l,com.google.ads.internal.f$a)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.f: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f: void <init>(com.google.ads.l,com.google.ads.internal.f$a)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f: void <init>(com.google.ads.l)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.internal.c: void <init>(com.google.ads.l)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.l: void <init>(com.google.ads.n)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest)>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> -> <com.google.ads.internal.d: void a(com.google.ads.AdRequest)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.d: long p()>
<com.google.ads.internal.c: void run()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.util.HashMap: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)>
<com.google.ads.internal.c: void run()> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.d: com.google.ads.internal.g n()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long m()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long n()>
<com.google.ads.internal.g: java.lang.String l()> -> <java.util.AbstractCollection: boolean isEmpty()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String l()>
<com.google.ads.internal.g: java.lang.String k()> -> <java.util.AbstractCollection: boolean isEmpty()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String k()>
<com.google.ads.internal.g: long j()> -> <java.util.LinkedList: int size()>
<com.google.ads.internal.g: long j()> -> <java.util.LinkedList: int size()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long j()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long o()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long p()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long s()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long v()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: boolean y()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: boolean A()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String D()>
<com.google.ads.internal.g: long E()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long E()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: void a()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isFullWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isAutoHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isCustomAdSize()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdSize: java.lang.String toString()> -> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)>
<org.apache.cordova.Config: void init(android.app.Activity)> -> <org.apache.cordova.Config: void <init>(android.app.Activity)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.Config: void init(android.app.Activity)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: int getMode()>
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: boolean isMusicActive()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: boolean isSpeakerphoneOn()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: int getRingerMode()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.al: void <init>(com.google.ads.ai)> -> <java.lang.Object: void <init>()>
<com.google.ads.ah: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.al: void <init>(com.google.ads.ai)> -> <com.google.ads.ah: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.al: void <init>(com.google.ads.ai)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.au: void <init>(java.io.OutputStream,byte[])> -> <java.lang.Object: void <init>()>
<com.google.ads.au: com.google.ads.au a(java.io.OutputStream,int)> -> <com.google.ads.au: void <init>(java.io.OutputStream,byte[])>
<com.google.ads.au: com.google.ads.au a(java.io.OutputStream)> -> <com.google.ads.au: com.google.ads.au a(java.io.OutputStream,int)>
+through reflection
<com.google.ads.ak: java.lang.String c()> -> <com.google.android.ads.zxxz.d: java.lang.String a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String c()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String a()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
+through reflection
<com.google.ads.ak: java.lang.Long b()> -> <com.google.android.ads.zxxz.a: java.lang.Long a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.Long b()>
<com.google.ads.ak: void b(android.content.Context)> -> <java.lang.Long: long longValue()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,long)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(long)> -> <com.google.ads.au: void b(long)>
<com.google.ads.au: void a(int,long)> -> <com.google.ads.au: void a(long)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,long)>
+through reflection
<com.google.ads.ak: java.lang.String d(android.content.Context)> -> <com.google.android.ads.zxxz.b: java.lang.String a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String d(android.content.Context)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
<com.google.ads.au: void b()> -> <com.squareup.okhttp.internal.http.RetryableOutputStream: void write(byte[],int,int)>
<com.google.ads.au: void a()> -> <com.google.ads.au: void b()>
<com.google.ads.ag: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$b: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$c: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$f: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$g: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$h: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$i: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$j: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$k: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$l: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$m: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$d: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$e: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void a(byte[],byte[])> -> <com.google.ads.ag$b: void a(byte[],byte[])>
<com.google.ads.ag: void a(byte[],byte[])> -> <com.google.ads.ag$b: void a(byte[],byte[])>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.telephony.TelephonyManager: int getPhoneType()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.telephony.TelephonyManager: int getNetworkType()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: com.google.ads.b a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: java.math.BigInteger b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.math.BigInteger: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: com.google.ads.b a()>
<com.google.ads.b: java.math.BigInteger c()> -> <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.b: java.math.BigInteger c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.math.BigInteger: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: void <init>()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: boolean isEmpty()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.security.Provider: java.util.Set keySet()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.HashSet: java.util.Iterator iterator()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: void <init>()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: boolean isEmpty()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.security.Provider: java.util.Set keySet()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.HashSet: java.util.Iterator iterator()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> -> <java.util.Iterator: boolean hasNext()>
<com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)> -> <com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)>
<com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)> -> <org.json.JSONObject: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.c: java.lang.String g()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.c: java.lang.String d()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.c: java.lang.String h()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.c: java.lang.String f()>
<com.google.ads.internal.c: void b(java.lang.String,java.lang.String)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.c: void b(java.lang.String,java.lang.String)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void b(java.lang.String,java.lang.String)> -> <com.google.ads.internal.c$c: void <init>(com.google.ads.internal.c,android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.c: void b(java.lang.String,java.lang.String)> -> <android.os.Handler: boolean post(java.lang.Runnable)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.c: void b(java.lang.String,java.lang.String)>
<com.google.ads.internal.c: void run()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.AdWebView: void a(boolean)> -> <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.ads.internal.AdWebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebViewClient$1: void <init>(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void start()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <android.net.Uri: boolean isHierarchical()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: void <init>()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String getEncodedQuery()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <android.net.Uri: java.lang.String getPath()>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.internal.d: com.google.ads.internal.c k()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.Object: void notify()>
<com.google.ads.internal.c: void run()> -> <java.lang.Object: void wait(long)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <com.google.ads.internal.c$a: void <init>(com.google.ads.internal.d,android.webkit.WebView,com.google.ads.internal.f,com.google.ads.AdRequest$ErrorCode,boolean)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> -> <android.os.Handler: boolean post(java.lang.Runnable)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.aa: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)>
<com.google.ads.internal.AdWebView: void stopLoading()> -> <android.webkit.WebView: void stopLoading()>
<com.google.ads.internal.AdWebView: void destroy()> -> <android.webkit.WebView: void destroy()>
<com.google.ads.internal.AdWebView: void destroy()> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.AdWebView: void destroy()> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.n: boolean b()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.internal.h: boolean a()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <com.google.ads.n: boolean b()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <android.app.Activity: void onDestroy()>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.ArrayList: java.util.Iterator iterator()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.Config: boolean isUrlWhiteListed(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onDestroy()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.api.PluginManager: void onDestroy()>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void handleDestroy()> -> <android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<org.apache.cordova.CordovaActivity: void onDestroy()> -> <org.apache.cordova.CordovaWebView: void handleDestroy()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebViewClient$1: void <init>(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void start()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void endActivity()> -> <android.app.Activity: void finish()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: void endActivity()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.support.v4.app.BackStackRecord: java.lang.String toString()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: void spinnerStop()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void <init>()> -> <android.app.Activity: void <init>()>
<org.apache.cordova.CordovaActivity: void <init>()> -> <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<org.apache.cordova.DroidGap: void <init>()> -> <org.apache.cordova.CordovaActivity: void <init>()>
<com.prashanth.paranormalstories.MainActivity: void <init>()> -> <org.apache.cordova.DroidGap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void init(android.app.Activity)> -> <org.apache.cordova.Config: void <init>(android.app.Activity)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.Config: void init(android.app.Activity)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: boolean requestFeature(int)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.Window getWindow()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Window: void setFlags(int,int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getWidth()>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.Display: int getHeight()>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void <init>(android.content.Context,int,int)> -> <android.widget.LinearLayout: void <init>(android.content.Context)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.LinearLayoutSoftKeyboardDetect: void <init>(android.content.Context,int,int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout: void setOrientation(int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setBackgroundColor(int)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity: void setVolumeControlStream(int)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <org.apache.cordova.CordovaActivity: void onCreate(android.os.Bundle)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.RelativeLayout: void <init>(android.content.Context)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> -> <java.lang.Boolean: boolean booleanValue()>
<com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> -> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> -> <android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> -> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.widget.FrameLayout: void <init>(android.content.Context)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> -> <android.view.View: void setFocusable(boolean)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.g: void <init>()> -> <java.util.LinkedList: void <init>()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void <init>()> -> <com.google.ads.internal.g: void a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.g: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: boolean a()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: boolean a()>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> -> <com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.d: void <init>(com.google.ads.Ad,android.app.Activity,com.google.ads.AdSize,java.lang.String,android.view.ViewGroup,boolean)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setSaveFormData(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView$Level16Apis: void enableUniversalAccess(android.webkit.WebSettings)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.io.File: java.lang.String getPath()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.cordova.CordovaWebView: void setup()> -> <java.io.File: java.lang.String getPath()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<org.apache.cordova.CordovaWebView: void updateUserAgentString()> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<org.apache.cordova.CordovaWebView: void updateUserAgentString()> -> <android.webkit.WebSettings: java.lang.String getUserAgentString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView: void updateUserAgentString()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.IntentFilter: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.IntentFilter: void addAction(java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView$1: void <init>(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.CordovaWebView: void setup()> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.api.PluginManager: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <java.util.LinkedList: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue,org.apache.cordova.NativeToJsMessageQueue$1)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue$PrivateApiBridgeMode: void <init>(org.apache.cordova.NativeToJsMessageQueue,org.apache.cordova.NativeToJsMessageQueue$1)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> -> <java.util.AbstractCollection: boolean isEmpty()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.NativeToJsMessageQueue: void <init>(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)>
<org.apache.cordova.ExposedJsApi: void <init>(org.apache.cordova.api.PluginManager,org.apache.cordova.NativeToJsMessageQueue)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.ExposedJsApi: void <init>(org.apache.cordova.api.PluginManager,org.apache.cordova.NativeToJsMessageQueue)>
<org.apache.cordova.CordovaWebView: void exposeJsInterface()> -> <android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<org.apache.cordova.CordovaWebView: void setup()> -> <org.apache.cordova.CordovaWebView: void exposeJsInterface()>
<org.apache.cordova.CordovaWebView: void <init>(android.content.Context)> -> <org.apache.cordova.CordovaWebView: void setup()>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaWebView: void <init>(android.content.Context)>
<org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <android.webkit.WebViewClient: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <java.util.Hashtable: void <init>()>
<org.apache.cordova.IceCreamCordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <org.apache.cordova.CordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.IceCreamCordovaWebViewClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaChromeClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)> -> <android.webkit.WebChromeClient: void <init>()>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaChromeClient: void <init>(org.apache.cordova.api.CordovaInterface,org.apache.cordova.CordovaWebView)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.View: void setId(int)>
<org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaWebViewClient: void setWebView(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaChromeClient: void setWebView(org.apache.cordova.CordovaWebView)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.view.ViewGroup: void addView(android.view.View)>
<org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> -> <android.app.Activity: void setContentView(android.view.View)>
<org.apache.cordova.CordovaActivity: void init()> -> <org.apache.cordova.CordovaActivity: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: void init()>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: int getIntegerProperty(java.lang.String,int)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <android.view.View: void setBackgroundColor(int)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: boolean getBooleanProperty(java.lang.String,boolean)>
<org.apache.cordova.CordovaActivity: void loadSpinner()> -> <android.webkit.WebView: boolean canGoBack()>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void loadSpinner()> -> <org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaActivity: void loadSpinner()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
[ Intent received ]
caller=<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
callsite=$r5 = virtualinvoke $r4.<android.app.Activity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: java.lang.String getProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlIntoView(java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void init()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.apache.cordova.CordovaActivity: android.app.Activity getActivity()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.api.PluginManager: void loadPlugins()> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void <init>(android.content.Context)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setBackgroundColor(int)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.view.View: android.content.Context getContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> -> <android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.AdUtil: void a(android.webkit.WebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebSettings: void setSavePassword(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.internal.AdWebView$1: void <init>(com.google.ads.internal.AdWebView)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.lang.Long: long longValue()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <java.io.File: java.lang.String getAbsolutePath()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setSupportZoom(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)> -> <android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.h: void a(android.webkit.WebSettings,com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setScrollBarStyle(int)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <com.google.ads.util.IcsUtil$a: void <init>(com.google.ads.n)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)> -> <android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.AdWebView: void <init>(com.google.ads.n,com.google.ads.AdSize)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> -> <com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <android.view.View: void setWillNotDraw(boolean)>
<com.google.ads.internal.f: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f$1: void <init>()>
<com.google.ads.internal.f: void <init>(com.google.ads.l,com.google.ads.internal.f$a)> -> <java.lang.Object: void <init>()>
<com.google.ads.internal.f: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f: void <init>(com.google.ads.l,com.google.ads.internal.f$a)>
<com.google.ads.internal.c: void <init>(com.google.ads.l)> -> <com.google.ads.internal.f: void <init>(com.google.ads.l)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.internal.c: void <init>(com.google.ads.l)>
<com.google.ads.l: void <init>(com.google.ads.n)> -> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.l: void <init>(com.google.ads.n)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest)> -> <java.lang.Thread: void start()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> -> <com.google.ads.internal.c: void a(com.google.ads.AdRequest)>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> -> <com.google.ads.internal.d: void a(com.google.ads.AdRequest)>
<com.prashanth.paranormalstories.MainActivity: void onCreate(android.os.Bundle)> -> <com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.internal.d: long p()>
<com.google.ads.internal.c: void run()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void run()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.util.HashMap: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> -> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.internal.c: void run()> -> <com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)>
<com.google.ads.internal.c: void run()> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.d: com.google.ads.internal.g n()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long m()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long n()>
<com.google.ads.internal.g: java.lang.String l()> -> <java.util.AbstractCollection: boolean isEmpty()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String l()>
<com.google.ads.internal.g: java.lang.String k()> -> <java.util.AbstractCollection: boolean isEmpty()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String k()>
<com.google.ads.internal.g: long j()> -> <java.util.LinkedList: int size()>
<com.google.ads.internal.g: long j()> -> <java.util.LinkedList: int size()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long j()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long o()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long p()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long s()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long v()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: boolean y()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: boolean A()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: java.lang.String D()>
<com.google.ads.internal.g: long E()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: long E()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Long: java.lang.Long valueOf(long)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.g: void a()> -> <java.util.LinkedList: void clear()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: void a()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.g: void i()> -> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void i()> -> <android.os.SystemClock: long elapsedRealtime()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.g: void i()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.internal.h: boolean a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.n: boolean b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.internal.h: com.google.ads.AdSize c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isFullWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isAutoHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: boolean isCustomAdSize()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdSize: java.lang.String toString()> -> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.AdSize: java.lang.String toString()> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.AdSize: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.m: com.google.ads.m a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)> -> <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)> -> <android.net.NetworkInfo: int getType()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: int getMode()>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.util.d: boolean equals(java.lang.Object)> -> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> -> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.util.AdUtil: boolean c()> -> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: boolean isMusicActive()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: boolean isSpeakerphoneOn()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> -> <android.media.AudioManager: int getRingerMode()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Enum: int ordinal()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)> -> <android.util.DisplayMetrics: void <init>()>
<com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)> -> <android.app.Activity: android.view.WindowManager getWindowManager()>
<com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)> -> <android.view.WindowManager: android.view.Display getDefaultDisplay()>
<com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)> -> <android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Float: java.lang.Float valueOf(float)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.e: int a(android.content.Context,float,int)> -> <android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.google.ads.util.e: int a(android.content.Context,android.util.DisplayMetrics)> -> <com.google.ads.util.e: int a(android.content.Context,float,int)>
<com.google.ads.util.AdUtil: int a(android.content.Context,android.util.DisplayMetrics)> -> <com.google.ads.util.e: int a(android.content.Context,android.util.DisplayMetrics)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: int a(android.content.Context,android.util.DisplayMetrics)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.e: int a(android.content.Context,float,int)> -> <android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.google.ads.util.e: int b(android.content.Context,android.util.DisplayMetrics)> -> <com.google.ads.util.e: int a(android.content.Context,float,int)>
<com.google.ads.util.AdUtil: int b(android.content.Context,android.util.DisplayMetrics)> -> <com.google.ads.util.e: int b(android.content.Context,android.util.DisplayMetrics)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.AdUtil: int b(android.content.Context,android.util.DisplayMetrics)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.util.Locale: java.util.Locale getDefault()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.util.Locale: java.lang.String getLanguage()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.ak: com.google.ads.ak a(java.lang.String,android.content.Context)> -> <com.google.ads.ak: void b(java.lang.String,android.content.Context)>
<com.google.ads.ak: void <init>(android.content.Context)> -> <com.google.ads.aj: void <init>(android.content.Context)>
<com.google.ads.ak: com.google.ads.ak a(java.lang.String,android.content.Context)> -> <com.google.ads.ak: void <init>(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.ak: com.google.ads.ak a(java.lang.String,android.content.Context)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.al: void <init>(com.google.ads.ai)> -> <java.lang.Object: void <init>()>
<com.google.ads.ah: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.al: void <init>(com.google.ads.ai)> -> <com.google.ads.ah: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.al: void <init>(com.google.ads.ai)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.au: void <init>(java.io.OutputStream,byte[])> -> <java.lang.Object: void <init>()>
<com.google.ads.au: com.google.ads.au a(java.io.OutputStream,int)> -> <com.google.ads.au: void <init>(java.io.OutputStream,byte[])>
<com.google.ads.au: com.google.ads.au a(java.io.OutputStream)> -> <com.google.ads.au: com.google.ads.au a(java.io.OutputStream,int)>
+through reflection
<com.google.ads.ak: java.lang.String c()> -> <com.google.android.ads.zxxz.d: java.lang.String a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String c()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String a()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
+through reflection
<com.google.ads.ak: java.lang.Long b()> -> <com.google.android.ads.zxxz.a: java.lang.Long a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.Long b()>
<com.google.ads.ak: void b(android.content.Context)> -> <java.lang.Long: long longValue()>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,long)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(long)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(long)> -> <com.google.ads.au: void b(long)>
<com.google.ads.au: void a(int,long)> -> <com.google.ads.au: void a(long)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,long)>
+through reflection
<com.google.ads.ak: java.lang.String d(android.content.Context)> -> <com.google.android.ads.zxxz.b: java.lang.String a()>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.ak: java.lang.String d(android.content.Context)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.av: int a(int,int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(int,int)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.ads.au: void a(int)> -> <com.google.ads.au: void a(byte)>
<com.google.ads.au: void b(int)> -> <com.google.ads.au: void a(int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void b(int)>
<com.google.ads.au: void a(byte[],int,int)> -> <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.ads.au: void a(byte[])> -> <com.google.ads.au: void a(byte[],int,int)>
<com.google.ads.au: void a(java.lang.String)> -> <com.google.ads.au: void a(byte[])>
<com.google.ads.au: void a(int,java.lang.String)> -> <com.google.ads.au: void a(java.lang.String)>
<com.google.ads.ak: void b(android.content.Context)> -> <com.google.ads.aj: void a(int,java.lang.String)>
<com.google.ads.au: void b()> -> <com.squareup.okhttp.internal.http.RetryableOutputStream: void write(byte[],int,int)>
<com.google.ads.au: void a()> -> <com.google.ads.au: void b()>
<com.google.ads.ag: void <init>()> -> <java.lang.Object: void <init>()>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$b: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$c: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$f: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$g: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$h: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$i: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$j: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$k: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$l: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$m: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$d: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void <init>()> -> <com.google.ads.ag$e: void <init>(com.google.ads.ag,com.google.ads.ag$1)>
<com.google.ads.ag: void a(byte[],byte[])> -> <com.google.ads.ag$b: void a(byte[],byte[])>
<com.google.ads.ag: void a(byte[],byte[])> -> <com.google.ads.ag$b: void a(byte[],byte[])>
<com.google.ads.aq: char[] a(byte[],int,int,char[],int)> -> <com.google.ads.aq: char[] a(byte[],int,int,char[],int,char[])>
<com.google.ads.aq: java.lang.String a(byte[],int,int,char[],boolean)> -> <com.google.ads.aq: char[] a(byte[],int,int,char[],int)>
<com.google.ads.aq: java.lang.String a(byte[],int,int,char[],boolean)> -> <java.lang.String: void <init>(char[],int,int)>
<com.google.ads.aq: java.lang.String a(byte[],boolean)> -> <com.google.ads.aq: java.lang.String a(byte[],int,int,char[],boolean)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.aj: java.lang.String a(android.content.Context)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: android.view.ViewParent getParent()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.view.View: void getLocationOnScreen(int[])>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> -> <android.content.ContextWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.support.v4.app.BackStackRecord: java.lang.String toString()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: void spinnerStop()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.AdWebView: void a(boolean)> -> <android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<com.google.ads.internal.AdWebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> <android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void e(java.lang.String)> -> <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void e(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebViewClient$1: void <init>(org.apache.cordova.CordovaWebViewClient)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.Thread: void start()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <android.net.Uri: boolean isHierarchical()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: void <init>()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String getEncodedQuery()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int indexOf(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: int length()>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)> -> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean c(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getScheme()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <android.net.Uri: java.lang.String getAuthority()>
<com.google.ads.internal.a: boolean b(android.net.Uri)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> -> <android.net.Uri: java.lang.String getPath()>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> -> <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.AdWebView: void stopLoading()> -> <android.webkit.WebView: void stopLoading()>
<com.google.ads.internal.AdWebView: void destroy()> -> <android.webkit.WebView: void destroy()>
<com.google.ads.internal.AdWebView: void destroy()> -> <android.webkit.WebViewClient: void <init>()>
<com.google.ads.internal.AdWebView: void destroy()> -> <android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.n: boolean b()> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.n: boolean b()> -> <com.google.ads.internal.h: boolean a()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <com.google.ads.n: boolean b()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: void <init>()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <java.lang.StringBuilder: java.lang.String toString()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <com.google.ads.util.b: boolean a(int)>
<com.google.ads.util.b: boolean a(java.lang.String,int)> -> <android.util.Log: boolean isLoggable(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String)> -> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> -> <com.google.ads.util.i$c: java.lang.Object a()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.support.v4.app.BackStackRecord: java.lang.String toString()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: void spinnerStop()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <android.view.View: void setVisibility(int)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <android.webkit.WebView: void resumeTimers()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.api.PluginManager: void onResume(boolean)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <android.webkit.WebView: void resumeTimers()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: int getSize()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <org.apache.cordova.CordovaWebView: void printBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: void goBack()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean backHistory()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: int getSize()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <org.apache.cordova.CordovaWebView: void printBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: void goBack()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean backHistory()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: int getSize()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <org.apache.cordova.CordovaWebView: void printBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: void goBack()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean backHistory()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: int getSize()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <org.apache.cordova.CordovaWebView: void printBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: void goBack()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean backHistory()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
[ Intent received ]
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void init(android.app.Activity)> -> <org.apache.cordova.Config: void <init>(android.app.Activity)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.Config: void init(android.app.Activity)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
[ Intent received ]
caller=<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
callsite=$r3 = virtualinvoke $r0.<org.apache.cordova.CordovaActivity: android.content.Intent getIntent()>()
	Action=android.intent.action.MAIN
	Categories=1
		android.intent.category.LAUNCHER
	PackageName=null
	DataString=null
	DataURI=null
	Scheme=null
	Flags=270532608
	Type=null
	Extras=null
	Component=ComponentInfo{com.prashanth.paranormalstories/com.prashanth.paranormalstories.MainActivity}
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
<org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)> -> <android.content.Intent: android.os.Bundle getExtras()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.CordovaActivity: java.lang.String getStringProperty(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onResume(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <org.apache.cordova.api.PluginManager: void onResume(boolean)>
<org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)> -> <android.webkit.WebView: void resumeTimers()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <org.apache.cordova.CordovaWebView: void handleResume(boolean,boolean)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <com.google.ads.internal.d: com.google.ads.internal.AdWebView l()>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.view.View: void setVisibility(int)>
<com.google.ads.AdView: void onMeasure(int,int)> -> <android.widget.RelativeLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <android.view.View$MeasureSpec: int getSize(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.api.LOG: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue$JsMessage: void <init>(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)> -> <org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable()>
<org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void enqueueMessage(org.apache.cordova.NativeToJsMessageQueue$JsMessage)>
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> -> <org.apache.cordova.NativeToJsMessageQueue: void addJavaScript(java.lang.String)>
<org.apache.cordova.LinearLayoutSoftKeyboardDetect: void onMeasure(int,int)> -> <org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: int getSize()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <org.apache.cordova.CordovaWebView: void printBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: void goBack()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean backHistory()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <android.webkit.WebView: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean startOfHistory()> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean startOfHistory()>
<org.apache.cordova.CordovaWebView: boolean backHistory()> -> <android.webkit.WebView: boolean canGoBack()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: int getSize()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <android.webkit.WebHistoryItem: java.lang.String getUrl()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.Integer: java.lang.String toString(int)>
<org.apache.cordova.CordovaWebView: void printBackForwardList()> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaActivity: void onResume()> -> <android.app.Activity: void onResume()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.Object: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.ArrayList: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.HashMap: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.lang.String: int compareTo(java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)> -> <java.util.ArrayList: boolean add(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.Config: void _addWhiteListEntry(java.lang.String,boolean)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.util.regex.Matcher: boolean find()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: char charAt(int)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> -> <android.util.Log: int i(java.lang.String,java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: int next()>
<org.apache.cordova.Config: void <init>(android.app.Activity)> -> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaWebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaActivity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apache.cordova.CordovaActivity: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.KeyEvent: long getEventTime()>
<org.apache.cordova.CordovaWebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.ViewGroup: android.view.View getFocusedChild()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <org.apache.cordova.CordovaWebView: boolean isCustomViewShowing()>
<org.apache.cordova.CordovaActivity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashMap: java.util.Set entrySet()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.HashSet: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.PluginManager: boolean onOverrideUrlLoading(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <java.util.LinkedList: void clear()>
<org.apache.cordova.NativeToJsMessageQueue: void reset()> -> <org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.NativeToJsMessageQueue: void reset()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onReset()> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)> -> <org.apache.cordova.api.PluginManager: void onReset()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: void <init>()>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.StringBuilder: java.lang.String toString()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.CordovaActivity: java.lang.Object onMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)> -> <org.apache.cordova.api.PluginManager: java.lang.Object postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <org.apache.cordova.CordovaWebView: void postMessage(java.lang.String,java.lang.Object)>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <android.view.View: int getVisibility()>
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <android.app.Activity: void onPause()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean equals(java.lang.Object)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <org.apache.cordova.api.LOG: boolean isLoggable(int)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <java.lang.String: boolean startsWith(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)> -> <android.webkit.WebView: void loadUrl(java.lang.String)>
<org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)> -> <org.apache.cordova.CordovaWebView: void loadUrlNow(java.lang.String)>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.CordovaWebView: void loadUrl(java.lang.String)>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.HashMap: java.util.Collection values()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: java.lang.Object next()>
<org.apache.cordova.api.PluginManager: void onPause(boolean)> -> <java.util.Iterator: boolean hasNext()>
<org.apache.cordova.CordovaWebView: void handlePause(boolean)> -> <org.apache.cordova.api.PluginManager: void onPause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaWebView: void handlePause(boolean)>
<org.apache.cordova.CordovaActivity: void onPause()> -> <org.apache.cordova.CordovaActivity: void removeSplashScreen()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String sourceId()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: int lineNumber()>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.ConsoleMessage: java.lang.String message()>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])> -> <android.util.Log: int d(java.lang.String,java.lang.String)>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <org.apache.cordova.api.LOG: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> -> <android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<org.apache.cordova.CordovaActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: void onWindowVisibilityChanged(int)>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <android.view.View: boolean isInEditMode()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.d: com.google.ads.n i()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.AdView: void onWindowVisibilityChanged(int)> -> <com.google.ads.internal.h: boolean b()>
