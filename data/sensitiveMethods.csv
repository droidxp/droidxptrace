method
"android.content.ContextWrapper: android.content.res.Resources getResources()"
"android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)"
"android.content.ContextWrapper: android.content.ContentResolver getContentResolver()"
"android.view.ContextThemeWrapper: android.content.res.Resources getResources()"
"android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()"
"android.view.View: android.content.Context getContext()"
"android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)"
"android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()"
"android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)"
"android.content.Context: java.lang.String getString(int)"
"android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)"
"android.content.ContextWrapper: java.lang.String getPackageName()"
"android.content.ContextWrapper: android.content.Context getApplicationContext()"
"android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()"
"android.app.Activity: android.content.Intent getIntent()"
"android.content.ContextWrapper: java.io.File getCacheDir()"
"android.telephony.TelephonyManager: java.lang.String getNetworkOperator()"
"android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)"
"android.telephony.TelephonyManager: java.lang.String getDeviceId()"
"android.content.Intent: java.lang.String getAction()"
"android.content.ContextWrapper: android.content.res.AssetManager getAssets()"
"android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)"
"android.content.Intent: android.os.Bundle getExtras()"
"android.content.Intent: android.net.Uri getData()"
"android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)"
"android.content.res.Resources: android.content.res.Configuration getConfiguration()"
"android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()"
"android.content.res.Resources: java.lang.String getString(int)"
"android.telephony.TelephonyManager: java.lang.String getSubscriberId()"
"android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)"
"android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)"
"android.telephony.TelephonyManager: int getPhoneType()"
"android.telephony.TelephonyManager: int getNetworkType()"
"android.content.ComponentName: java.lang.String getPackageName()"
"android.content.Intent: int getIntExtra(java.lang.String,int)"
"android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)"
"android.app.ActivityManager: java.util.List getRunningTasks(int)"
"android.telephony.gsm.GsmCellLocation: int getLac()"
"android.telephony.gsm.GsmCellLocation: int getCid()"
"android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)"
"android.content.Intent: java.lang.String getStringExtra(java.lang.String)"
"android.view.View: android.content.res.Resources getResources()"
"android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)"
"android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)"
"android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)"
"android.content.ContextWrapper: java.io.File getFilesDir()"
"android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)"
"android.net.wifi.WifiInfo: java.lang.String getMacAddress()"
"android.content.ContentProvider: android.content.Context getContext()"
"android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)"
"android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence),int)"
"android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()"
"android.content.res.Resources: android.content.res.AssetManager getAssets()"
"android.content.ContextWrapper: android.os.Looper getMainLooper()"
"android.content.res.Resources: boolean getBoolean(int)"
"android.content.ContextWrapper: android.content.Context getBaseContext()"
"android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)"
"android.content.res.Resources: int getColor(int)"
"android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)"
"android.content.res.Resources: android.content.res.Resources getSystem()"
"android.app.ActivityManager: int getLauncherLargeIconDensity()"
"android.content.Intent: java.lang.String getDataString()"
"android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)"
"android.view.View: int getImportantForAccessibility()"
"android.telephony.TelephonyManager: java.lang.String getSimOperator()"
"android.telephony.TelephonyManager: java.lang.String getLine1Number()"
"android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)"
"android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)"
"android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)"
"android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)"
"android.app.ActivityManager: java.util.List getRunningAppProcesses()"
"android.content.ComponentName: java.lang.String getClassName()"
"org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()"
"android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence), int)"
"android.content.Context: java.lang.String getString(int,java.lang.Object[])"
"android.content.res.Resources: java.lang.String[] getStringArray(int)"
"android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)"
"android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)"
"android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)"
"android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)"
"android.app.ActivityManager: java.util.List getRunningServices(int)"
"android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)"
"android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()"
"android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)"
"org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()"
"android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View)"
"android.app.Dialog: android.content.Context getContext()"
"android.support.v4.view.PagerAdapter: float getPageWidth(int)"
"android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)"
"android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)"
"android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)"
"android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)"
"android.content.Context: java.lang.CharSequence getText(int)"
"android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)"
"android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)"
"android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)"
"android.content.res.Resources: java.lang.CharSequence getText(int)"
"android.content.res.TypedArray: int getResourceId(int,int)"
"android.content.res.AssetFileDescriptor: long getStartOffset()"
"android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)"
"android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()"
"android.content.pm.Signature: byte[] toByteArray()"
"android.content.res.Resources: int getInteger(int)"
"android.content.res.AssetFileDescriptor: long getLength()"
"android.view.View: android.view.ViewTreeObserver getViewTreeObserver()"
"android.content.res.Resources: float getDimension(int)"
"android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)"
"android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)"
"android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)"
"android.content.Intent: java.util.Set getCategories()"
"android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)"
"org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()"
"android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)"
"android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)"
"android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)"
"android.content.Intent: int getFlags()"
"android.content.Intent: int[] getIntArrayExtra(java.lang.String)"
"android.content.Intent: java.lang.String getScheme()"
"android.content.res.TypedArray: java.lang.String getString(int)"
"android.content.res.TypedArray: boolean getBoolean(int,boolean)"
"org.apache.http.HttpHost: java.lang.String toHostString()"
"org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()"
"android.content.res.TypedArray: int getInt(int,int)"
"android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()"
"android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)"
"android.net.wifi.WifiInfo: java.lang.String getBSSID()"
"org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()"
"android.net.wifi.WifiManager: java.util.List getScanResults()"
"android.accounts.Account: java.lang.String toString()"
"android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)"
"android.content.res.Resources: int getDimensionPixelSize(int)"
"android.telephony.TelephonyManager: int getSimState()"
"org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()"
"org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()"
"android.content.IntentFilter: java.lang.String getAction(int)"
"android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()"
"android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()"
"android.hardware.Camera: android.hardware.Camera$Parameters getParameters()"
"android.net.wifi.WifiInfo: java.lang.String getSSID()"
"android.widget.ArrayAdapter: android.content.Context getContext()"
"android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()"
"android.app.ActivityManager: int getMemoryClass()"
"android.content.res.TypedArray: int getInteger(int,int)"
"android.content.ContentResolver: boolean getMasterSyncAutomatically()"
"org.apache.http.HttpHost: int getPort()"
"android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)"
"org.apache.http.HttpHost: java.lang.String getHostName()"
"android.content.res.TypedArray: int getDimensionPixelSize(int,int)"
"android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()"
"android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)"
"android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()"
"android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)"
"android.hardware.Camera$Parameters: int getPreviewFormat()"
"android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)"
"android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])"
"android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)"
"android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)"
"android.telephony.TelephonyManager: java.lang.String getSimOperatorName()"
"android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()"
"android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()"
"android.hardware.Camera$Parameters: int getPreviewFrameRate()"
"android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()"
"android.preference.Preference: android.content.Context getContext()"
"android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])"
"org.apache.http.entity.ByteArrayEntity: long getContentLength()"
"android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()"
"android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()"
"android.net.wifi.WifiManager: int getWifiState()"
"android.content.Intent: double getDoubleExtra(java.lang.String,double)"
"android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()"
"org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()"
"android.content.Intent: long getLongExtra(java.lang.String,long)"
"android.app.Activity: android.content.SharedPreferences getPreferences(int)"
"android.net.wifi.WifiInfo: int getRssi()"
"android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()"
"android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)"
"android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])"
"android.content.res.TypedArray: int getColor(int,int)"
"android.net.wifi.WifiInfo: int getIpAddress()"
"android.telephony.SmsManager: android.telephony.SmsManager getDefault()"
"android.app.Activity: android.content.ComponentName getComponentName()"
"android.widget.TextView: android.content.res.ColorStateList getTextColors()"
"android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()"
"android.content.ContentValues: java.lang.String toString()"
"android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)"
"android.location.LocationManager: java.util.List getAllProviders()"
"android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)"
"android.support.v13.app.FragmentPagerAdapter: android.os.Parcelable saveState()"
"android.content.ContextWrapper: java.lang.String getPackageCodePath()"
"android.location.Location: double getLongitude()"
"android.net.wifi.WifiInfo: int getLinkSpeed()"
"android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)"
"org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()"
"org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()"
"android.location.Location: double getLatitude()"
"android.content.res.ColorStateList: int getDefaultColor()"
"org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()"
"android.content.Intent: android.content.ComponentName getComponent()"
"android.net.wifi.ScanResult: java.lang.String toString()"
"android.support.v4.view.ViewPager: int getCurrentItem()"